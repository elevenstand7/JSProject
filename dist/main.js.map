{"version":3,"file":"main.js","mappings":"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","sources":["webpack://jsproject/./src/scripts/loopy.js","webpack://jsproject/./src/scripts/game.js","webpack://jsproject/./src/index.js"],"sourcesContent":["\n\nconst hitSound = new Audio('./src/audio/hit.mp3');\n\nclass Loopy{\n    constructor(element, beHit, game){\n        this.element = element;\n        this.isVisible = false;\n        this.beHit = beHit;\n        this.element.addEventListener(\"click\", this.hit.bind(this));\n        this.isEvil = false;\n        this.isHit = false;\n        this.game = game;\n    }\n\n    show(){\n        this.isVisible = true;\n        this.element.classList.add(\"showUp\");\n        this.element.classList.remove(\"hidden\");\n    }\n\n    hide(){\n        this.isVisible = false;\n        this.element.classList.add(\"hidden\");\n        this.element.classList.remove(\"showUp\");\n    }\n\n    hit(){\n        if(this.isVisible && !this.isHit){\n            if(this.isEvil){\n                console.log(\"hit evil loopy!\")\n                document.getElementById(\"hit-evil\").innerHTML = \"You hit the evil loopy!\";\n                this.game.gameOver();\n            }else{\n                this.element.classList.add(\"dazedEffect\");\n                this.beHit();\n                hitSound.currentTime = 0;\n                hitSound.play();\n                this.hide();\n                setTimeout(()=>{\n                    this.element.classList.remove(\"dazedEffect\");\n                    this.isHit = false;\n                }, 300);\n            }\n        }\n    }\n\n    changeEvil(){\n        this.element.src = './assets/images/evil-loopy.png';\n        this.isEvil = true;\n    }\n    changeNormal(){\n        this.element.src = './assets/images/normal-loopy.png';\n        this.isEvil = false;\n    }\n}\n\n\nexport default Loopy;\n","import Loopy from \"./loopy\";\n\nconst backgroundMusic = new Audio('./src/audio/music.mp3');\n\nbackgroundMusic.addEventListener(\"ended\", ()=>{\n    backgroundMusic.play();\n})\n\nclass Game{\n    constructor(hardOn){\n        this.restTime = null;\n        this.hardOn = hardOn;\n        this.score = 0;\n        this.time = 0;\n        this.loopyShowTime = 2000;\n        this.loopyList = [];\n        // this.startGame();\n        this.gameScore = document.getElementById(\"score\");\n        this.gameTime = document.getElementById(\"time\");\n\n        document.querySelectorAll(\".loopy\").forEach(loopy=>{\n            this.loopyList.push(new Loopy(loopy, this.updateScore.bind(this), this));\n        });\n    }\n\n    start(){\n        document.getElementById(\"game-start\").close();\n        this.gameScore.innerHTML = \"0\";\n        document.getElementById(\"hit-evil\").innerHTML = \"\";\n        this.time = 10;\n        this.score = 0;\n        this.gameTime.innerText = this.time + 's';\n        this.restTime = setInterval(this.countDown.bind(this), 1000);\n        this.showRandomLoopy();\n\n        backgroundMusic.play();\n        this.evilLoopyTimer = setInterval(this.showEvilLoopy.bind(this), 2000);\n\n\n        const musicImageList = ['./assets/images/on.png', './assets/images/off.png']\n        const musicBtn = document.querySelector(\".music\");\n\n        let currentImgIdx = 0;\n\n        musicBtn.addEventListener(\"click\",()=>{\n\n            currentImgIdx = (currentImgIdx+1) % musicImageList.length;\n            const nextImg = musicImageList[currentImgIdx];\n\n            const musicImg = document.querySelector(\".music-img\");\n            musicImg.src = nextImg;\n\n            if(currentImgIdx === 1)  backgroundMusic.pause();\n            if(currentImgIdx === 0)  backgroundMusic.play();\n        });\n    }\n\n    countDown(){\n        this.time--;\n        this.gameTime.innerText = this.time + 's';\n\n        if(this.time !== 0){\n            this.showRandomLoopy();\n        }else{\n            this.gameOver();\n        }\n    }\n\n\n    updateScore(){\n        this.score+=1;\n        this.gameScore.innerText = this.score;\n    }\n\n    showRandomLoopy(){\n        let randomLoopy = this.loopyList[Math.floor(Math.random() * this.loopyList.length)];\n\n        randomLoopy.show();\n        setTimeout(() => randomLoopy.hide(),2000);\n    }\n\n    showEvilLoopy(){\n        // console.log(\"hard on!\")\n        // console.log(this.loopyList)\n        const randomIdx = Math.floor(Math.random() * this.loopyList.length);\n\n        const evilLoopy = this.loopyList[randomIdx];\n        console.log(this.hardOn)\n        if(this.hardOn){\n            // console.log(\"evil loopy!\")\n            evilLoopy.changeEvil();\n            setTimeout(()=>{\n                evilLoopy.changeNormal();\n            },4100)\n        }\n\n    }\n\n    gameOver(){\n        document.getElementById(\"game-end\").showModal();\n        document.getElementById(\"result\").innerHTML = `Your score is ${this.score}!`;\n        backgroundMusic.pause();\n        backgroundMusic.currentTime = 0;\n        clearInterval(this.restTime);\n        clearInterval(this.evilLoopyTimer);\n    }\n\n    reStart(){\n        document.getElementById(\"game-end\").close();\n        this.start();\n    }\n\n\n\n}\n\nexport default Game;\n","\nimport Game from \"./scripts/game\";\n\n\ndocument.addEventListener(\"DOMContentLoaded\",\nfunction(){\n    const title = document.querySelector(\"h2\");\n    title.innerHTML = title.textContent.replace(/\\S/g, \"<span class='title-char'>$&</span>\");\n\n    document.querySelectorAll(\".title-char\").forEach(\n        (ele, idx)=>{\n            ele.style.setProperty('--delay', `${idx *0.1}s`)\n        }\n    )\n\n\n    let introPage = document.getElementById(\"game-start\");\n    introPage.showModal();\n    const gameScore = document.getElementById(\"score\");\n    const gameTime = document.getElementById(\"time\");\n\n    const game = new Game(false);\n    const hardGame = new Game(true);\n\n    let gameStart = document.getElementById(\"start\");\n\n\n    gameStart.addEventListener(\"click\", ()=>{\n        introPage.close();\n        console.log(\"Game Start!\");\n        game.start();\n    });\n\n    let reStart = document.getElementById(\"restart\");\n    let switchMode = document.getElementById(\"hard\");\n\n    reStart.addEventListener(\"click\", ()=>{\n        let endPage = document.getElementById(\"game-end\");\n        endPage.close();\n        document.querySelector(\".music-img\").src = './assets/images/on.png';\n        game.reStart();\n    })\n    switchMode.addEventListener(\"click\", ()=>{\n        console.log(\"hard mode\");\n\n        hardGame.reStart();\n    })\n\n});\n\n\n\n"],"names":["hitSound","Audio","backgroundMusic","addEventListener","play","constructor","hardOn","this","restTime","score","time","loopyShowTime","loopyList","gameScore","document","getElementById","gameTime","querySelectorAll","forEach","loopy","push","element","beHit","game","isVisible","hit","bind","isEvil","isHit","show","classList","add","remove","hide","console","log","innerHTML","gameOver","currentTime","setTimeout","changeEvil","src","changeNormal","updateScore","start","close","innerText","setInterval","countDown","showRandomLoopy","evilLoopyTimer","showEvilLoopy","musicImageList","musicBtn","querySelector","currentImgIdx","length","nextImg","pause","randomLoopy","Math","floor","random","randomIdx","evilLoopy","showModal","clearInterval","reStart","title","textContent","replace","ele","idx","style","setProperty","introPage","Game","hardGame","switchMode"],"sourceRoot":""}